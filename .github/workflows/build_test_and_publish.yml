name: Build, Test, & Publish

on:
  push:
    branches: [ develop, release-*, hotfix-*, master ]

jobs:

  # --------------------------------------------------
  # 1️⃣ Build Job
  # --------------------------------------------------
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Get configuration
      id: config
      run: |
        if [ "${{ github.ref_name }}" == "develop" ]; then
          echo "cfg=Debug" >> $GITHUB_ENV
          echo "cfg set to Debug"
        else
          echo "cfg=Release" >> $GITHUB_ENV
          echo "cfg set to Release"
        fi

    - name: Setup framework
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 8.0.x

    - name: Install dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration ${{ env.cfg }} --no-restore --verbosity Normal --output BuildResults --disable-parallel

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-results
        path: BuildResults
        if-no-files-found: error


  # --------------------------------------------------
  # 2️⃣ Test Job
  # --------------------------------------------------
  test:
    runs-on: ubuntu-latest
    needs: build

    steps:

    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Get configuration (same logic)
      run: |
        if [ "${{ github.ref_name }}" == "develop" ]; then
          echo "cfg=Debug" >> $GITHUB_ENV
        else
          echo "cfg=Release" >> $GITHUB_ENV
        fi

    - name: Setup framework
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Run tests
      run: dotnet test --configuration ${{ env.cfg }} --no-restore --verbosity Normal


  # --------------------------------------------------
  # 3️⃣ Publish Job
  # --------------------------------------------------
  publish:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref_name == 'master'

    steps:

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-results
        path: BuildResults

    - name: Setup framework
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 8.0.x

    - name: Publish package to NuGet
      run: dotnet nuget push BuildResults/*.nupkg -k ${{ secrets.NUGET_APIKEY }} -s https://api.nuget.org/v3/index.json
